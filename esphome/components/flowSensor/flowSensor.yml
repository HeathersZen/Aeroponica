esphome:
  name: aeroponica-flowsensor
  friendly_name: Aeroponica-FlowSensor
  on_boot:
    then:
      - script.execute: 
          id: flashLED
          flashCount: 10

esp8266:
  board: esp01_1m

# Enable logging
logger:

globals:
  - id: counter 
    type: int
    restore_value: no
    initial_value: '5'

# Enable Home Assistant API
api:
  encryption:
    key: "NdF2EF2GaehuTsDKoj1rQprpcRAgrihAiV8E79s0/wA="

ota:
  - platform: esphome
    password: "45b59df2bdcf022f1088f525fe61d6c8"

web_server:
  port: 80

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Aeroponica-Flowsensor"
    password: "dcpqHNSkvHyx"

captive_portal:

switch:
  - platform: gpio
    pin: 2
    id: LED
    name: LED
    inverted: True
    restore_mode: RESTORE_DEFAULT_OFF

sensor:
   # pressureLoopFlowRate: Pressure loop flow sensor measures how much nutrient is flowing out to the wall from the pressure loop. Should match the 
   # feed flow sensor on each wall, and only show a value when the lines on each wall are feeding.
  - platform: pulse_counter
    id: pressureLoopFlowRate
    name: "Flow Rate (Pressure Loop)"
    state_class: measurement
    pin: 
        number: GPIO5
    update_interval: 2s
    filters:
      - round: 2
      - lambda: return ((x / 38.0) / 60);
    unit_of_measurement: "L/m"

    # circulationLoopFlowRate: Measures the nutrient flowing in the circulation loop. Should be relatively constant most times, when only the
    # circulation pump is running (it is always running except during maintenance). Should go up significantly when the boost pump is turned on.
  - platform: pulse_counter
    id: circulationLoopFlowRate
    name: "Flow Rate (Circulation Loop)"
    state_class: measurement
    pin: 
        number: GPIO4
    update_interval: 2s
    filters:
      - round: 2
      - lambda: return ((x / 38.0) / 60);
    unit_of_measurement: "L/m" 
    
interval:
  - interval: 1min
    then:
      - script.execute: 
          id: flashLED
          flashCount: 3         

script:
  # Flash the LED to indicate the system is working normally. This is called on startup and intermittently by the interval tag.
  - id: flashLED
    mode: single
    parameters: 
      flashCount: int
    then:
      - repeat:
          count: !lambda 'return flashCount;'
          then:
            - switch.turn_on: LED  
            - delay: 200ms
            - switch.turn_off: LED  
            - delay: 200ms
