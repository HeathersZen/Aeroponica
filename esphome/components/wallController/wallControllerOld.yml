substitutions:
  name: wall1-controller
  friendly_name: Wall 1 Controller
  area: ""

esphome:
  name: "wall1-controller"
  friendly_name: Wall1Controller
  project:
      name: "ryansch.esphome_config"
      version: "1.0.0"

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "IYaT90UcNrW2ioo/z9QtW+2sQX4DxJx6n1kTJ+rzuLY="

ota:
  - platform: esphome
    password: "c1567b47465065284277ccacf2bf353a"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Hamlinwifi Fallback Hotspot"
    password: "OjThdFNVjcU9"

captive_portal:

web_server:
  port: 80

dashboard_import:
  package_import_url: github://ryansch/esphome-config/waveshare-esp32-s3-relay-6ch.yaml

# Time
# Resets the 24 hour dispensed counter at midnight
time:
  - platform: homeassistant
    id: homeassistant_time
    on_time:
    - seconds: 0
      minutes: 0
      hours: 0   # Midnight
      then:
      - number.set:
          id: L1DispensedLast24
          value: 0
      - number.set:
          id: L2DispensedLast24
          value: 0
      - number.set:
          id: L3DispensedLast24
          value: 0
      - number.set:
          id: L4DispensedLast24
          value: 0 

# For each grow line, declare three numbers:
# - Expected Dispense - User editable value that sets the amount that is expected to be dispensed in each feed cycle. Will allow if less.
# - Dispensed last feed - Amount dispensed in the last feed cycle
# - Dispensed last 24 - Amount dispensed since midnight. This value is reset every 24 hours at midmight.

number:
  - platform: template
    name: Grow Line Count
    id: GrowLineCount
    min_value: 1
    max_value: 50
    step: 1
    optimistic: True
  - platform: template
    name: L1 Expected Dispense
    id: L1ExpectedDispense
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True    
  - platform: template
    name: L1 Dispensed Last Feed
    id: L1DispensedLastFeed
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True
  - platform: template
    name: L1 Dispensed Last 24
    id: L1DispensedLast24
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True
  - platform: template
    name: L2 Expected Dispense
    id: L2ExpectedDispense
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True    
  - platform: template
    name: L2 Dispensed Last Feed
    id: L2DispensedLastFeed
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True
  - platform: template
    name: L2 Dispensed Last 24
    id: L2DispensedLast24
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True
  - platform: template
    name: L3 Expected Dispense
    id: L3ExpectedDispense
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True    
  - platform: template
    name: L3 Dispensed Last Feed
    id: L3DispensedLastFeed
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True
  - platform: template
    name: L3 Dispensed Last 24
    id: L3DispensedLast24
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True
  - platform: template
    name: L4 Expected Dispense
    id: L4ExpectedDispense
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True    
  - platform: template
    name: L4 Dispensed Last Feed
    id: L4DispensedLastFeed
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True
  - platform: template
    name: L4 Dispensed Last 24
    id: L4DispensedLast24
    min_value: 0
    max_value: 999999
    step: .1
    optimistic: True


binary_sensor:
  - platform: status
    name: "Status"

  - platform: gpio
    name: "Boot Button"
    pin:
      number: 0
      ignore_strapping_warning: true
      mode:
        input: true
      inverted: true
    disabled_by_default: true
    on_press:
      then:
        - button.press: restart_button

text_sensor:
  - platform: version
    name: "Firmware Version"
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      entity_category: diagnostic
    ssid:
      name: "Connected SSID"
      entity_category: diagnostic
    mac_address:
      name: "Mac Address"
      entity_category: diagnostic

switch:
  - platform: gpio
    pin: GPIO1
    id: relay1
    name: Line 1 Mister
    on_turn_on:
      - sensor.integration.reset: last_feed_amount    
    on_turn_off:
      - number.set:
          id: L1DispensedLastFeed
          value: !lambda |-
                return id(last_feed_amount).state;
      - number.set:
          id: L1DispensedLast24
          value: !lambda |-
                return id(L1DispensedLast24).state + id(last_feed_amount).state;
  - platform: gpio
    pin: GPIO2
    id: relay2
    name: Line 2 Mister
    on_turn_on:
      - sensor.integration.reset: last_feed_amount    
    on_turn_off:
      - number.set:
          id: L2DispensedLastFeed
          value: !lambda |-
                return id(last_feed_amount).state;
      - number.set:
          id: L2DispensedLast24
          value: !lambda |-
                return id(L2DispensedLast24).state + id(last_feed_amount).state;
  - platform: gpio
    pin: GPIO41
    id: relay3
    name: Line 3 Mister
    on_turn_on:
      - sensor.integration.reset: last_feed_amount    
    on_turn_off:
      - number.set:
          id: L3DispensedLastFeed
          value: !lambda |-
                return id(last_feed_amount).state;
      - number.set:                
          id: L3DispensedLast24
          value: !lambda |-
                return id(L3DispensedLast24).state + id(last_feed_amount).state;
  - platform: gpio
    pin: GPIO42
    id: relay4
    name: Line 4 Mister
    on_turn_on:
      - sensor.integration.reset: last_feed_amount    
    on_turn_off:
      - number.set:
          id: L4DispensedLastFeed
          value: !lambda |-
                return id(last_feed_amount).state;
      - number.set:                
          id: L4DispensedLast24
          value: !lambda |-
                return id(L4DispensedLast24).state + id(last_feed_amount).state;

uart:
  tx_pin: GPIO17
  rx_pin: GPIO18
  baud_rate: 115200

# buzzer
output:
  - platform: ledc
    pin: GPIO21
    id: buzzer

rtttl:
  output: buzzer
  id: rtttl_buzzer
  gain: 30%

light:
  - platform: neopixelbus
    type: RGB
    variant: 800KBPS
    pin: GPIO38
    num_leds: 1
    name: "RGB LED"
    id: rgb_led

button:
  - platform: restart
    name: "Restart"
    id: restart_button
    entity_category: config

  - platform: factory_reset
    name: "Factory Reset"
    id: reset
    entity_category: config

  - platform: safe_mode
    name: "Safe Mode"
    internal: false
    entity_category: config

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: diagnostic

  # Reports the WiFi signal strength in %
  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi Strength"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: diagnostic

  - platform: integration
    name: "Last Feed Amount"
    id: last_feed_amount
    sensor: feed_flow_rate
    unit_of_measurement: "L"
    time_unit: h

  - platform: integration
    name: "Cumulative Feed Amount"
    id: cumulative_feed_amount
    sensor: feed_flow_rate
    state_class: total_increasing
    unit_of_measurement: "L"
    time_unit: h

  - platform: pulse_counter
    name: "Feed Flow Rate"
    state_class: measurement
    pin: GPIO10
    update_interval: 500ms
    filters:
      - round: 2
      - lambda: return ((x / 21.0) / 60);
    unit_of_measurement: "L/m" 
    id: feed_flow_rate

interval:
  - interval: 5min
    then:
      - switch.turn_on: relay1
      - delay: "00:00:04"
      - switch.turn_off: relay1
      - delay: "00:00:05"
      - switch.turn_on: relay2
      - delay: "00:00:04"
      - switch.turn_off: relay2
      - delay: "00:00:05"
      - switch.turn_on: relay3
      - delay: "00:00:04"
      - switch.turn_off: relay3
      - delay: "00:00:05"
      - switch.turn_on: relay4
      - delay: "00:00:04"
      - switch.turn_off: relay4
