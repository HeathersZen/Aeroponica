sensor:
    # Resistance sensor that calculates the resistance on the voltage divider circuit 
    # based on the known reference resistor and the unknown resistance in the float valve.
  - platform: resistance
    id: floatSensorResistance
    name: "Float Sensor Resistance"
    sensor: floatSensorVoltage
    accuracy_decimals: 0
    configuration: DOWNSTREAM
    resistor: 831Ohm
    reference_voltage: 3.3V
    on_value:
      then:
        - component.update: tankLevel

    # Source sensor to read the voltage value from the pin.
  - platform: adc
    id: floatSensorVoltage
    name: "Float Sensor Voltage"
    accuracy_decimals: 0
    pin: GPIO34
    update_interval: 2s

    # What the resistance value was measured at  when the sensor was fully down to the bottom of its travel
  - platform: template
    id: sensorMinResistance
    name: "Sensor Minimum Resistance"
    lambda: return 19.3;

    # What the resistance value was measured at when the sensor is fully up to the top of its travel
  - platform: template
    id: sensorMaxResistance
    name: "Tank Full Value"
    lambda: return 126.0;

    # Returns a percentage value indicating how full the tank is based on the ratio of the current sensor reading to the full/empty values.
  - platform: template
    name: "Tank Level"
    id: "tankLevel"
    accuracy_decimals: 0
    unit_of_measurement: "%"
    state_class: measurement
    lambda: |-
      if (id(floatSensorResistance).state < id(sensorMinResistance).state)
        return 0;
      else
      {
        // Total possible delta in readings between a full tank and an empty tank.
        float maxResistanceRange = float(id(sensorMaxResistance).state) - float(id(sensorMinResistance).state); 
        float fillAmount = ( (  float(id(floatSensorResistance).state) - float(id(sensorMinResistance).state) ) / maxResistanceRange ) * 100;
        return fillAmount;
      }

