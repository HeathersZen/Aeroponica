esphome:
  name: nutrienttemperaturemonitor
  friendly_name: NutrientTemperatureMonitor
  on_boot:
    then:
      - script.execute: 
          id: flashLED
          flashCount: 10

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "3UdIOkxtu88wblJ+sUTMj4l8lqD7a+1DE6XIuyhCXKQ="

ota:
  - platform: esphome
    password: "03fa2a91140d30f5cff097807ce3cc39"

web_server:
  port: 80

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Nutrienttemperaturemonitor"
    password: "aqaa5acpGpvm"

one_wire:
  - platform: gpio
    pin: GPIO0

captive_portal:
    
switch:
  - platform: gpio
    pin: 2
    id: LED
    name: LED
    inverted: True
    restore_mode: RESTORE_DEFAULT_OFF    

sensor:
    # Temperature probe:
  - platform: dallas_temp
    id: nutrientTemperatureCelsius
    name: "Nutrient Temperature (C)"
    update_interval: 10s
    unit_of_measurement: "°C"
    icon: mdi:icon7-sun-fill

    # Temperature probe (converted to F)
  - platform: template
    id: nutrientTemperatureFahrenheit
    name: "Nutrient Temperature (F)"
    lambda: return id(nutrientTemperatureCelsius).state * (9.0/5.0) + 32.0;
    unit_of_measurement: "°F"
    update_interval: 10s
    icon: mdi:icon7-sun-fill

number:
  - platform: template
    name: Over Temp Threshold # The temp at which the platform will send an over temp theshold
    id: overTempThreshold
    min_value: 1.0
    max_value: 100.0
    initial_value: 62.0
    step: .1
    optimistic: true
    mode: BOX
  - platform: template
    name: Under Temp Threshold # The temp at which the platform will send an under temp theshold
    id: underTempThreshold
    min_value: 1.0
    max_value: 100.0
    initial_value: 56.0
    step: .1
    optimistic: true
    mode: BOX

interval:
  - interval: 1min
    then:
      - script.execute: 
          id: flashLED
          flashCount: 3  

script:
  # Flash the LED to indicate the system is working normally. This is called on startup and intermittently by the interval tag.
  - id: flashLED
    mode: single
    parameters: 
      flashCount: int
    then:
      - repeat:
          count: !lambda 'return flashCount;'
          then:
            - switch.turn_on: LED  
            - delay: 200ms
            - switch.turn_off: LED  
            - delay: 200ms
